image: registry.gitlab.com/particle4dev/build-images:docker-17.07.0-nodejs-8.5.0

# cache
.default-cache: &default-cache
  key: "node_modules"
  paths:
    - node_modules/
    - .yarn-cache/

.push-cache: &push-cache
  cache:
    <<: *default-cache
    policy: push

.pull-cache: &pull-cache
  cache:
    <<: *default-cache
    policy: pull

before_script:
  - chmod +x -R bin/ && for f in bin/utils/*; do source $f; done
  - cd source
  - node --version
  - yarn install --frozen-lockfile --cache-folder .yarn-cache

stages:
  - test
  - post-test

# Predefined scopes

testcoverage:
  stage: test
  cache:
    <<: *default-cache
  script:
    - exitCode=$($CI_PROJECT_DIR/bin/generateTestReport)
    - set +e && npm run coverage && set -e
    - slackpost -f="tape-test-report" --text="Report:" -u="Gitlab - Test coverage report"
    - exit $exitCode
  artifacts:
    paths: [source/coverage]
    expire_in: 3d

codecoverage:
  stage: test
  cache:
    <<: *default-cache
  variables:
    SETUP_DB: "false"
    DOCKER_DRIVER: overlay
  services:
    - docker:dind
  script:
    - exitCode=$($CI_PROJECT_DIR/bin/generateCodeReport)
    - docker run --env CODECLIMATE_CODE="$PWD" --env CODECLIMATE_DEBUG=1 --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate analyze -f html > out.html
    - slackpost -f="eslint-codeframe-report" --text="Report:" -u="Gitlab - Code coverage report"
    - exit $exitCode
  artifacts:
    # paths: [codeclimate.json]
    paths: [source/out.html]
    expire_in: 3d
